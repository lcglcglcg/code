#############################################################################
# Makefile for building: app_baidu
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? 10? 8 10:32:23 2012
# Project:  app_baidu.pro
# Template: app
# Command: /opt/QtSDK/Desktop/Qt/474/gcc/bin/qmake -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile app_baidu.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ -I. -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtCore -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtNetwork -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtGui -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtWebKit -I/opt/QtSDK/Desktop/Qt/474/gcc/include -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/opt/QtSDK/Desktop/Qt/474/gcc/lib
LIBS          = $(SUBLIBS)  -L/opt/QtSDK/Desktop/Qt/474/gcc/lib -lQtWebKit -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/QtSDK/Desktop/Qt/474/gcc/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = network.cpp \
		keyword.cpp \
		task_table.cpp \
		task_insert.cpp \
		task_update.cpp \
		task_delete.cpp \
		login_window.cpp \
		chat_window.cpp \
		main_window.cpp \
		main.cpp moc_network.cpp \
		moc_keyword.cpp \
		moc_task_table.cpp \
		moc_task_insert.cpp \
		moc_task_update.cpp \
		moc_task_delete.cpp \
		moc_login_window.cpp \
		moc_chat_window.cpp \
		moc_main_window.cpp \
		qrc_images.cpp
OBJECTS       = network.o \
		keyword.o \
		task_table.o \
		task_insert.o \
		task_update.o \
		task_delete.o \
		login_window.o \
		chat_window.o \
		main_window.o \
		main.o \
		moc_network.o \
		moc_keyword.o \
		moc_task_table.o \
		moc_task_insert.o \
		moc_task_update.o \
		moc_task_delete.o \
		moc_login_window.o \
		moc_chat_window.o \
		moc_main_window.o \
		qrc_images.o
DIST          = /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf \
		app_baidu.pro
QMAKE_TARGET  = app_baidu
DESTDIR       = 
TARGET        = app_baidu

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: app_baidu.pro  /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++/qmake.conf /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile app_baidu.pro
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile app_baidu.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/app_baidu1.0.0 || $(MKDIR) .tmp/app_baidu1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/app_baidu1.0.0/ && $(COPY_FILE) --parents lg_packet.h network.h keyword.h task_table.h task_insert.h task_update.h task_delete.h login_window.h chat_window.h main_window.h .tmp/app_baidu1.0.0/ && $(COPY_FILE) --parents images.qrc .tmp/app_baidu1.0.0/ && $(COPY_FILE) --parents network.cpp keyword.cpp task_table.cpp task_insert.cpp task_update.cpp task_delete.cpp login_window.cpp chat_window.cpp main_window.cpp main.cpp .tmp/app_baidu1.0.0/ && (cd `dirname .tmp/app_baidu1.0.0` && $(TAR) app_baidu1.0.0.tar app_baidu1.0.0 && $(COMPRESS) app_baidu1.0.0.tar) && $(MOVE) `dirname .tmp/app_baidu1.0.0`/app_baidu1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/app_baidu1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_network.cpp moc_keyword.cpp moc_task_table.cpp moc_task_insert.cpp moc_task_update.cpp moc_task_delete.cpp moc_login_window.cpp moc_chat_window.cpp moc_main_window.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_network.cpp moc_keyword.cpp moc_task_table.cpp moc_task_insert.cpp moc_task_update.cpp moc_task_delete.cpp moc_login_window.cpp moc_chat_window.cpp moc_main_window.cpp
moc_network.cpp: lg_packet.h \
		task_table.h \
		chat_window.h \
		network.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) network.h -o moc_network.cpp

moc_keyword.cpp: keyword.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) keyword.h -o moc_keyword.cpp

moc_task_table.cpp: task_table.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) task_table.h -o moc_task_table.cpp

moc_task_insert.cpp: keyword.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		task_insert.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) task_insert.h -o moc_task_insert.cpp

moc_task_update.cpp: network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		task_update.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) task_update.h -o moc_task_update.cpp

moc_task_delete.cpp: network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		task_delete.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) task_delete.h -o moc_task_delete.cpp

moc_login_window.cpp: network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		login_window.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) login_window.h -o moc_login_window.cpp

moc_chat_window.cpp: chat_window.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) chat_window.h -o moc_chat_window.cpp

moc_main_window.cpp: network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		task_insert.h \
		keyword.h \
		task_update.h \
		task_delete.h \
		main_window.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) main_window.h -o moc_main_window.cpp

compiler_rcc_make_all: qrc_images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_images.cpp
qrc_images.cpp: images.qrc \
		images/login.bmp \
		images/action_task_del.png \
		images/action_task_add.png \
		images/action_task_down.png
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/rcc -name images images.qrc -o qrc_images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

network.o: network.cpp network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network.o network.cpp

keyword.o: keyword.cpp keyword.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyword.o keyword.cpp

task_table.o: task_table.cpp task_table.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_table.o task_table.cpp

task_insert.o: task_insert.cpp task_insert.h \
		keyword.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_insert.o task_insert.cpp

task_update.o: task_update.cpp task_update.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_update.o task_update.cpp

task_delete.o: task_delete.cpp task_delete.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task_delete.o task_delete.cpp

login_window.o: login_window.cpp login_window.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login_window.o login_window.cpp

chat_window.o: chat_window.cpp chat_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chat_window.o chat_window.cpp

main_window.o: main_window.cpp main_window.h \
		network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		task_insert.h \
		keyword.h \
		task_update.h \
		task_delete.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main_window.o main_window.cpp

main.o: main.cpp network.h \
		lg_packet.h \
		task_table.h \
		chat_window.h \
		login_window.h \
		main_window.h \
		task_insert.h \
		keyword.h \
		task_update.h \
		task_delete.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

moc_network.o: moc_network.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_network.o moc_network.cpp

moc_keyword.o: moc_keyword.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyword.o moc_keyword.cpp

moc_task_table.o: moc_task_table.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_task_table.o moc_task_table.cpp

moc_task_insert.o: moc_task_insert.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_task_insert.o moc_task_insert.cpp

moc_task_update.o: moc_task_update.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_task_update.o moc_task_update.cpp

moc_task_delete.o: moc_task_delete.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_task_delete.o moc_task_delete.cpp

moc_login_window.o: moc_login_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login_window.o moc_login_window.cpp

moc_chat_window.o: moc_chat_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_chat_window.o moc_chat_window.cpp

moc_main_window.o: moc_main_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_main_window.o moc_main_window.cpp

qrc_images.o: qrc_images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_images.o qrc_images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

