有人试过用Mingw的C++编译器写window Hook吗？
问我为什么要这样做的话，回答很让我惭愧。那就是，我不太会VC。
我认为是可以用MinGW做的。因为我自己也用过MinGW来做很多window的小程序，想sendMessage，窗口截屏，多线程，WinSock等等，都用到window 的API。但没有做过hook。看了很多文章，也做了代码转换。编译也成功，但没有效果。
有没有哪位做过的或者知道的，给些代码，或者指点指点，让小的学习学习。
下面贴出一段我上面所说的代码：
Hook.h:
C/C++ code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

/*
 * Hook.h
 *
 *  Created on: 2010-4-9
 *      Author: John
 */

#ifndef HOOK_H_
#define HOOK_H_
#include <windows.h>
BOOL Hotkey_UnInstall();
BOOL Hotkey_Install(DWORD ThreadID);
LRESULT CALLBACK Hotkey_Filter(int nCode, WPARAM wParam, LPARAM lParam);
int printHAHA(int num);
#endif /* HOOK_H_ */


Hook.cpp(修改网上VC代码而得）:
	C/C++ code
	1
	2
	3
	4
	5
	6
	7
	8
	9
	10
	11
	12
	13
	14
	15
	16
	17
	18
	19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

/*
 * Hook.cpp
 *
 *  Created on: 2010-4-9
 *      Author: John
 */

#include "Hook.h"

#include <iostream>
using namespace std;
HHOOK h_HotKey;
int printHAHA(int num){
    printf("hahah\n");
    fflush(stdout);
    return num+3;
}
LRESULT CALLBACK Hotkey_Filter(int nCode, WPARAM wParam, LPARAM lParam) {
    printf("hahah\n");
    fflush(stdout);
    return CallNextHookEx(h_HotKey, nCode, wParam, lParam); //回调
}

BOOL Hotkey_Install(DWORD ThreadID) {
    h_HotKey = SetWindowsHookEx(WH_KEYBOARD , (HOOKPROC) Hotkey_Filter, //安装低级键盘钩子
	    GetModuleHandle("hotkey"), ThreadID);
    if (NULL == h_HotKey) {
	MessageBox(NULL, "安装钩子出错 !", "error", MB_ICONSTOP);
	return FALSE;
    }
    return TRUE;
}

BOOL Hotkey_UnInstall() {
    UnhookWindowsHookEx(h_HotKey); //卸载钩子
    return TRUE;
}


Main.cpp
C/C++ code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

/*
 * testMain.cpp
 *
 *  Created on: 2010-3-7
 *      Author: John
 */
#include "Hook.h"
#include <iostream>
using namespace std;

int main() {
    cout<<"haha"<<endl;
    cout << printHAHA(100) << endl;

    HWND hwnd=::FindWindowA(NULL, "a.txt - 记事本");
    //::FlashWindow(hwnd, true);
    // Get the thread ID for the window that the cursor belongs to
    DWORD dwThreadID = GetWindowThreadProcessId(hwnd, NULL);

    // Get the thread ID for the current thread
    DWORD dwCurrentThreadID = GetCurrentThreadId();
    Hotkey_Install(0); //先试试全局
    for(int i = 0 ; i< 100; i++){
	printf("----%d\n", i);
	fflush(stdout);
	Sleep(1000);
    }
    BOOL Hotkey_UnInstall();

    return 0;
}
对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 | TOP
回复次数：5

zzultc
zzultc 
想不到昵称的笨蛋
等级：Blank

#1 得分：10 回复于： 2010-04-09 19:15:36
应该可以！但是hook一般都是做个dll，然后把这个dll注入到对方的进程中去获得全局消息。
有个细节，就是需要保存目标窗口的hwnd，这个数据需要写到dll的共享数据段中。
你知道MinGW在编译程序的时候怎么把特定的数据地址保存到dll的共享数据段中吗？
我是没有查到，所以还是使用vc来编译dll。你只要查到了，应该也是可以的。
CSDN论坛十一月“找bug 赢可用分”活动火热进行中
对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 | TOP

fox000002
fox000002 
糊糊。。闭关闭关
等级：Blank

#2 得分：10 回复于： 2010-04-09 19:26:56
MINGW 中共享数据段的写法

C/C++ code
1

HHOOK g_hHook __attribute__((section ("Shared"), shared)) = NULL;
专访魏子钧：喧嚣后的HTML5和JavaScript将长存
对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 | TOP

bluedimple
bluedimple 
该用户很懒,没设置昵称
等级：Blank

#3 得分：0 回复于： 2010-04-09 19:43:09
请问“dll的共享数据段”是什么？

“HHOOK g_hHook __attribute__((section ("Shared"), shared)) = NULL;”的作用又是什么呢？

，能说的更具体些吗？
谢谢大家帮忙！
【免费】解读海外市场营销奥秘
对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 | TOP

bluedimple
bluedimple 
该用户很懒,没设置昵称
等级：Blank

#4 得分：0 回复于： 2010-04-10 14:28:15
感谢zzultc 和 fox000002 的提示。加上自己在网上努力搜索资料，终于找到了在minGW下写hook的方法。具体如下：
hook.h:
C/C++ code
1
2
3
4
5
6
7

#ifndef HOOK_H_
#define HOOK_H_
#include <windows.h>
__declspec(dllexport)LRESULT CALLBACK hook(int nCode, WPARAM wParam,
	LPARAM lParam);

hook.cpp:
C/C++ code
1
2
3
4
5
6
7
8
9
10
11
12

#include "Hook.h"

#include <iostream>
using namespace std;


__declspec(dllexport) LRESULT CALLBACK hook(int nCode, WPARAM wParam, LPARAM lParam)
{
    ::MessageBoxA(NULL, "act", "msg", 0);
    return TRUE;
}

如是生成一个有hook 的dll。并用软件观察这个hook在dll里面的名字：_Z4hookijl@12
然后在安装hook的程序如此安装：
main.cpp
C/C++ code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

#include <iostream>
#include <windows.h>
using namespace std;
HOOKPROC hkprcSysMsg;
static HINSTANCE hinstDLL;
static HHOOK hhookSysMsg;

int main() {

    hinstDLL= LoadLibrary("E:\\John\\Documents\\Study\\WorkSpaces\\2010\\C\\HookTest\\Debug\\libHookTest.dll");
    if (hinstDLL == 0) {
	cout << "load library fail" << endl;
	return 0;
    } else
	cout << "load library success" << endl;
    hkprcSysMsg = (HOOKPROC) ::GetProcAddress(hinstDLL, "_Z4hookijl@12");
    //cout<<hkprcSysMsg<<endl;
    if (hkprcSysMsg == 0){
	cout << "fail" << endl;
	return 0;
    }else
	cout << "success" << endl;
    hhookSysMsg = SetWindowsHookEx(WH_KEYBOARD, hkprcSysMsg, hinstDLL, 0);
    cout<<hhookSysMsg<<endl;
    //让程序空转
    for(int i = 0 ;i < 100; i++){
	printf("---%d、n",i);
	fflush(stdout);
	::Sleep(1000);
    }
    return 0;
}
对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 | TOP

kerosun
kerosun 
该用户很懒,没设置昵称
等级：Blank

#5 得分：0 回复于： 2011-01-20 16:22:53
我怎么按照楼主的方法还是不行啊
提示我unterminated #ifndef错误
我是建立了一个Shared Library 类型的 C++ Project
但是建立完成hook.h就提示unterminated #ifndef错误
